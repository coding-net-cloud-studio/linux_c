
Chapter 2 - Shell 编程

first - 搜索包含单词 "POSIX" 的文件,并将这些文件打印到屏幕上的 shell 脚本.

variable - 演示变量引用规则的脚本.

try_var - 使用环境和参数变量执行简单变量操作的脚本.

_if - 询问一个问题,并使用 "if" 语句基于答案做出决定的脚本.

elif1 - 对 _if 的修改,如果用户输入的不是 "yes" 或 "no",则报告错误消息.

elif2 - 改进的 elif1.

for1 - 演示 "for" 循环的脚本.

for2 - 在 "for" 循环中演示通配符扩展的脚本.

for3 - 使用 "for" 循环打印消息 20 次的脚本.

while1 - 直到输入正确的单词才报告一个密码的脚本.

while2 - 与 for3 相比,更简洁的版本,使用 "while" 循环.

_until - 监视意外用户的脚本.

case1 - 改进的 elif2,更具选择性和宽容意外输入.

case2 - 改进的 case1.

case3 - 可重用的 case2.

and_list - 测试文件是否存在并在其中间打印文本的脚本.

or_list - 另一个测试文件是否存在并在其中间打印文本的脚本.

function - 演示 shell 函数的脚本.

local - 演示 shell 函数中局部变量的脚本.

my_name - 将参数传递给函数的脚本.

_break - 显示如何使用 "break" 语句跳出循环的脚本.

colon - 演示 ":" 命令的脚本.

cont1, cont2 - 演示 "continue" 命令的脚本.

classic, latest - 演示 "." 命令的脚本.

export1, export2 - 演示导出变量的脚本.

_set - 设置 shell 参数变量的脚本.

_shift - 演示如何使用 "shift" 命令移动参数的脚本.

_trap - 演示如何使用 "trap" 命令捕获信号的脚本.

_unset - 从 shell 环境中删除变量的脚本.

command.sh - 演示如何在脚本中执行命令的脚本.

arith - 执行简单算术的脚本.

param - 演示参数匹配操作符的脚本.

here1 - 将输入提供给 "cat" 命令的脚本.

here2 - 使用 here 文档编辑名为 "textfile" 的文件的脚本.

questions - 使用文本对话框的脚本.

gquestions - 使用 GNOME 图形对话框的脚本.

app/cd_db - 实现 CD 数据库应用程序的 shell 脚本.

```

****

Chapter 2 - Shell Programming.


first  -  A shell script that searches for files containing the word, "POSIX", and prints these files to screen.

variable  -  A script that demonstrates the quoting rules for variables.

try_var  -  A script that performs some simple variable manipulation using the environment and
parameter variables.

_if  -  A script that asks a question and then uses an "if" statement to make a decision based on the answer.

elif1  -  A modified version of _if. It reports an error message if the user types in anything other than
"yes" or "no".

elif2  -  An improved version of elif1.

for1  -  A script that demonstrates a "for" loop.

for2  -  A script that demonstrates a wildcard expansion in a "for" loop.

for3  -  A script that prints a message 20 times using a "for" loop.

while1  -  A script that asks a user for a password until the correct word is entered.

while2  -  A less cumbersome version of for3 that uses a "while" loop.

_until  -  A script that watches for an unexpected user.

case1  -  A revised version of elif2 which is a little more selective and forgiving of unexpected input.

case2  -  An improved version of case1.

case3  -  A reusable version of case2.

and_list  -  A script that tests for the existence of files and echoes some text in between.

or_list  -  Another script that tests for the existence of files and echoes some text in between.

function  -  A script that demonstrates a shell function.

local  -  A script that demonstrates a local variable within a shell function.

my_name  -  A script that passes a parameter to a function.

_break  -  A script that shows how to break out of a loop by using a "break" statement.

colon  -  A script that demonstrates the ":" command.

cont1, cont2  -  Two scripts that demonstrate the "continue" command.

classic, latest  -  Two scripts that demonstrate the "." command.

export1, export2  -  Two scripts that show how to export variables.

_set  -  A scipt that sets the parameter variables of the shell.

_shift  -  A script that changes the position of the shell parameters.

_trap  -  A script that traps a signal.

_unset  -  A script that removes the foo variable from the shell environment.

command.sh shows how to execute a command from within a script.

arith  -  A script that performs simple arithmetic quickly.

param  -  A script that demonstrates parameter matching operators.

here1  -  A script that feeds input to the "cat" command.

here2  -  A script that uses a here document to edit a file called "textfile".

questions - a script using a textual dialog box.

gquestions - a script using the GNOME graphical dialog box.

app/cd_db  -  A shell script that implements the CD Database application.

